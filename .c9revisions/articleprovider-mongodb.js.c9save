{"ts":1367366474840,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1367366568540,"patch":[[{"diffs":[[1,"var Db = require('mongodb').Db;\nvar Connection = require('mongodb').Connection;\nvar Server = require('mongodb').Server;\nvar BSON = require('mongodb').BSON;\nvar ObjectID = require('mongodb').ObjectID;\n\nArticleProvider = function(host, port) {\n  this.db= new Db('node-mongo-blog', new Server(host, port, {auto_reconnect: true}, {}));\n  this.db.open(function(){});\n};\n\n\nArticleProvider.prototype.getCollection= function(callback) {\n  this.db.collection('articles', function(error, article_collection) {\n    if( error ) callback(error);\n    else callback(null, article_collection);\n  });\n};\n\nArticleProvider.prototype.findAll = function(callback) {\n    this.getCollection(function(error, article_collection) {\n      if( error ) callback(error)\n      else {\n        article_collection.find().toArray(function(error, results) {\n          if( error ) callback(error)\n          else callback(null, results)\n        });\n      }\n    });\n};\n\n\nArticleProvider.prototype.findById = function(id, callback) {\n    this.getCollection(function(error, article_collection) {\n      if( error ) callback(error)\n      else {\n        article_collection.findOne({_id: article_collection.db.bson_serializer.ObjectID.createFromHexString(id)}, function(error, result) {\n          if( error ) callback(error)\n          else callback(null, result)\n        });\n      }\n    });\n};\n\nArticleProvider.prototype.save = function(articles, callback) {\n    this.getCollection(function(error, article_collection) {\n      if( error ) callback(error)\n      else {\n        if( typeof(articles.length)==\"undefined\")\n          articles = [articles];\n\n        for( var i =0;i< articles.length;i++ ) {\n          article = articles[i];\n          article.created_at = new Date();\n          if( article.comments === undefined ) article.comments = [];\n          for(var j =0;j< article.comments.length; j++) {\n            article.comments[j].created_at = new Date();\n          }\n        }\n\n        article_collection.insert(articles, function() {\n          callback(null, articles);\n        });\n      }\n    });\n};\n\nexports.ArticleProvider = ArticleProvider;"]],"start1":0,"start2":0,"length1":0,"length2":2106}]],"length":2106,"saved":false}
{"ts":1367368529374,"patch":[[{"diffs":[[0,"});\n};\n\n"],[1,"ArticleProvider.prototype.addCommentToArticle = function(articleId, comment, callback) {\n  this.getCollection(function(error, article_collection) {\n    if( error ) callback( error );\n    else {\n      article_collection.update(\n        {_id: article_collection.db.bson_serializer.ObjectID.createFromHexString(articleId)},\n        {\"$push\": {comments: comment}},\n        function(error, article){\n          if( error ) callback(error);\n          else callback(null, article)\n        });\n    }\n  });\n};\n\n\n"],[0,"exports."]],"start1":2056,"start2":2056,"length1":16,"length2":518}]],"length":2608,"saved":false}
